{"version":3,"sources":["Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","useEffect","noteService","initialNotes","notesToShow","filter","map","find","changedNote","returnedNote","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"uKAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,+BACGH,EAAKI,QACN,wBAAQC,QAASJ,EAAjB,SAAoCC,QCRtCI,EAAU,aAmBD,EAjBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAClB,OAAOA,EAASC,SAcL,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SC6D5BK,EAxEH,WACV,MAA4BC,mBAAS,IAArC,mBAAQC,EAAR,KAAeC,EAAf,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACRC,IACChB,MAAK,SAAAiB,GACJP,EAASO,QAEV,IAEH,IAgCMC,EAAcL,EAClBJ,EACEA,EAAMU,QAAO,SAAA5B,GAAI,OAAuB,IAAnBA,EAAKG,aAE9B,OACE,gCACE,uCACA,8BACE,yBAAQE,QAAS,kBAAMkB,GAAYD,IAAnC,mBACSA,EAAU,YAAc,WAGnC,6BACGK,EAAYE,KAAI,SAAC7B,GAAD,OACf,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,iBAAkB,kBA1BjC,SAACa,GACjB,sCAAkCA,GAA3C,IACMd,EAAOkB,EAAMY,MAAK,SAAA9B,GAAI,OAAIA,EAAKc,KAAOA,KACtCiB,EAAW,2BAAO/B,GAAP,IAAaG,WAAYH,EAAKG,YAE/CsB,EACYX,EAAIiB,GACXtB,MAAK,SAAAuB,GACJb,EAASD,EAAMW,KAAI,SAAA7B,GAAI,OAAIA,EAAKc,KAAOA,EAAKd,EAAOgC,SAkBOC,CAAmBjC,EAAKc,MAArEd,EAAKc,SAGpB,uBAAMoB,SA5CM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACnBjC,QAASgB,EACTkB,MAAM,IAAIC,MAAOC,cACjBrC,UAAWsC,KAAKC,SAAW,IAE7BjB,EACYY,GACP5B,MAAK,SAAAuB,GACJb,EAASD,EAAMyB,OAAOX,IACtBX,EAAW,QAiCb,UACE,uBACAuB,MAAOxB,EACPyB,SApDmB,SAACV,GACxBW,QAAQC,IAAIZ,EAAMa,OAAOJ,OACzBvB,EAAWc,EAAMa,OAAOJ,UAoDpB,wBAAQK,KAAK,SAAb,yBClERC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d3875ff5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n    const label = note.important\r\n      ? 'make not important' : 'make important'\r\n  \r\n    return (\r\n      <li>\r\n        {note.content} \r\n        <button onClick={toggleImportance}>{label}</button>\r\n      </li>\r\n    )\r\n  }\r\n\r\nexport default Note;","import axios from 'axios';\r\nconst baseUrl = '/api/notes';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => {\r\n    return response.data\r\n  })\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { \r\n    getAll, \r\n    create, \r\n    update \r\n  }","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Note from './Note';\r\n\r\nimport noteService from './services/notes'\r\n\r\nconst App = () => {\r\n  const [ notes, setNotes ] = useState([]);\r\n  const [newNote, setNewNote] = useState('');\r\n  const [showAll, setShowAll] = useState(true);\r\n\r\n  useEffect(() => {\r\n    noteService.getAll()\r\n    .then(initialNotes => {\r\n      setNotes(initialNotes)\r\n    })\r\n  }, [])\r\n\r\n  const handleNoteChange = (event) => {\r\n    console.log(event.target.value);\r\n    setNewNote(event.target.value);\r\n  }\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n    content: newNote,\r\n    date: new Date().toISOString(),\r\n    important: Math.random() < 0.5\r\n  }\r\n  noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      })\r\n}\r\n\r\nconst toggleImportanceOf = (id) => {\r\n  const url = `http://localhost:3001/notes/${id}`;\r\n  const note = notes.find(note => note.id === id);\r\n  const changedNote = {...note, important: !note.important}\r\n\r\n  noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n}\r\n\r\n  const notesToShow = showAll ?\r\n    notes\r\n    : notes.filter(note => note.important === true);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          Show: {showAll ? 'important' : 'all'}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map((note) =>\r\n          <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)}/>\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input \r\n        value={newNote} \r\n        onChange={handleNoteChange}\r\n        />\r\n        <button type=\"submit\">save</button>\r\n      </form> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nimport axios from 'axios'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}